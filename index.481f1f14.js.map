{"mappings":"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","sources":["./js/model.js","./js/views/GlobalDataView.js","./js/views/KenyanDataView.js","./js/views/SearchView.js","./js/views/SearchResultsView.js","./js/views/ChartView.js","./js/controller.js"],"sourcesContent":["import {\r\n  API_COUNTRIES,\r\n  API_HISTORY,\r\n  API_GLOBAL_CASES,\r\n  MAIN_COUNTRY,\r\n} from \"./config.js\";\r\n\r\nexport const state = {\r\n  globalCases: [],\r\n  kenyanCases: [],\r\n  search: {\r\n    query: \"\",\r\n    result: [],\r\n  },\r\n  history: {\r\n    cases: null,\r\n    deaths: null,\r\n    recovered: null,\r\n  },\r\n};\r\n\r\n/**\r\n * Fetch global cases and push to state array\r\n * @returns array\r\n */\r\nexport const getGlobalCases = async function () {\r\n  try {\r\n    // Fetch covid cases from API\r\n    const res = await fetch(`${API_GLOBAL_CASES}`);\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${res.status}`);\r\n\r\n    state.globalCases.push(data);\r\n\r\n    return state.globalCases;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\n/**\r\n * Fetch Kenyan cases and push to state array\r\n * @returns array\r\n */\r\nexport const getKenyanCases = async function () {\r\n  try {\r\n    // Fetch Kenyan Cases\r\n    const res = await fetch(`${API_COUNTRIES}${MAIN_COUNTRY}`);\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${res.status}`);\r\n\r\n    state.kenyanCases.push(data);\r\n\r\n    return state.kenyanCases;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const searchCountryCase = async function (query) {\r\n  try {\r\n    // Get search query\r\n    state.search.query = query;\r\n\r\n    // Fetch searched cases\r\n    const res = await fetch(`${API_COUNTRIES}${query}`);\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${res.status}`);\r\n\r\n    state.search.result.push(data);\r\n\r\n    // console.log(res, data);\r\n    return state.search.result;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const getCOVIDHistory = async function () {\r\n  try {\r\n    const res = await fetch(`${API_HISTORY}`);\r\n    const data = await res.json();\r\n\r\n    if (!res.ok) throw new Error(`${res.status}`);\r\n\r\n    state.history.cases = data.cases;\r\n    state.history.deaths = data.deaths;\r\n    state.history.recovered = data.recovered;\r\n\r\n    return state.history;\r\n  } catch (err) {\r\n    console.log(err);\r\n    throw err;\r\n  }\r\n};\r\n","class GlobalDataView {\r\n  _data;\r\n  _parentElement = document.querySelector(\".global_data\");\r\n\r\n  renderGlobalData(data) {\r\n    if (!data) return;\r\n\r\n    this._data = data;\r\n    const markup = this._generateMarkup();\r\n    this._clear();\r\n\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n  }\r\n\r\n  renderSpinner() {\r\n    const spinner = `<div class=\"loader\"></div>`;\r\n    this._clear();\r\n\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", spinner);\r\n  }\r\n\r\n  _clear() {\r\n    // Clear the html\r\n    this._parentElement.innerHTML = \"\";\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return `\r\n        ${this._data\r\n          .map((el) => {\r\n            return `\r\n            <h5 class=\"card-title\">Global Data üåç</h5>\r\n\r\n            <h4 class=\"card-text text-warning\">\r\n              <b>${el.cases}</b> <small>Confirmed cases</small> ‚úî\r\n            </h4>\r\n\r\n            <h4 class=\"card-text text-primary\">\r\n              <b>${el.recovered}</b> <small>Recovered</small> ‚ù§\r\n            </h4>\r\n\r\n            <h4 class=\"card-text text-danger\">\r\n              <b>${el.deaths}</b> <small>Deaths</small> üïä\r\n            </h4>\r\n            `;\r\n          })\r\n          .join(\"\")}\r\n      `;\r\n  }\r\n}\r\n\r\nexport default new GlobalDataView();\r\n","class KenyanDataView {\r\n  _data;\r\n  _parentElement = document.querySelector(\".kenyan_data\");\r\n\r\n  render(data) {\r\n    if (!data) return;\r\n    this._data = data;\r\n    const markup = this._generateMarkup();\r\n    this._clear();\r\n\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n  }\r\n\r\n  renderSpinner() {\r\n    const spinner = `<div class=\"loader\"></div>`;\r\n    this._clear();\r\n\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", spinner);\r\n  }\r\n\r\n  _clear() {\r\n    // Clear the html\r\n    this._parentElement.innerHTML = \"\";\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return `\r\n      ${this._data\r\n        .map((el) => {\r\n          return `\r\n        <h5 class=\"card-title\">Kenya <img src=\"${el.countryInfo.flag}\" /></h5>\r\n\r\n        <h4 class=\"card-text text-warning\">\r\n            <b>${el.cases}</b> <small>Confirmed cases</small> ‚úî\r\n        </h4>\r\n\r\n        <h4 class=\"card-text text-primary\">\r\n            <b>${el.recovered}</b> <small>Recovered</small> ‚ù§\r\n        </h4>\r\n\r\n        <h4 class=\"card-text text-danger\">\r\n            <b>${el.deaths}</b> <small>Deaths</small> üïä\r\n        </h4>\r\n        `;\r\n        })\r\n        .join(\"\")}\r\n      `;\r\n  }\r\n}\r\n\r\nexport default new KenyanDataView();\r\n","class SearchView {\r\n  _parentElement = document.querySelector(\".search_form\");\r\n  _searchField = this._parentElement.querySelector(\".search_field\");\r\n\r\n  getQuery() {\r\n    const query = this._searchField.value;\r\n    this._clear();\r\n    return query;\r\n  }\r\n\r\n  _clear() {\r\n    this._searchField.value = \"\";\r\n  }\r\n\r\n  addHandlerSearch(handler) {\r\n    this._parentElement.addEventListener(\"submit\", (e) => {\r\n      e.preventDefault();\r\n\r\n      handler();\r\n    });\r\n  }\r\n}\r\n\r\nexport default new SearchView();\r\n","class SearchResultsView {\r\n  _data;\r\n  _parentElement = document.querySelector(\".search_results\");\r\n\r\n  render(data) {\r\n    if (!data) return;\r\n\r\n    this._data = data;\r\n    const markup = this._generateMarkup();\r\n    this._clear();\r\n\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", markup);\r\n  }\r\n\r\n  renderSpinner() {\r\n    const spinner = `<div class=\"loader\"></div>`;\r\n    this._clear();\r\n\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", spinner);\r\n  }\r\n\r\n  renderError() {\r\n    const error = `<p> Country not found üö©</p>`;\r\n    this._clear();\r\n    this._parentElement.insertAdjacentHTML(\"afterbegin\", error);\r\n  }\r\n\r\n  _clear() {\r\n    this._parentElement.innerHTML = \"\";\r\n  }\r\n\r\n  _generateMarkup() {\r\n    return `${this._data\r\n      .map((el) => {\r\n        return `\r\n        <p class=\"card-title\">${el.country} <img src=\"${el.countryInfo.flag}\"></p>\r\n        <div class=\"row\">\r\n            <div class=\"col-3 text-warning\">\r\n                <b>${el.cases}</b> <small>Confirmed</small> ‚úî\r\n            </div>\r\n            <div class=\"col-3 text-primary\">\r\n                <b>${el.recovered}</b> <small>Recovered</small> ‚ù§\r\n            </div>\r\n            <div class=\"col-3 text-danger\">\r\n                <b>${el.deaths}</b> <small>Deaths</small> üïä\r\n            </div>\r\n        </div>\r\n      `;\r\n      })\r\n      .join(\"\")}`;\r\n  }\r\n}\r\n\r\nexport default new SearchResultsView();\r\n","class ChartView {\r\n  _data = [];\r\n  _ctx = [\r\n    document.getElementById(\"casesChart\").getContext(\"2d\"),\r\n    document.getElementById(\"deathChart\").getContext(\"2d\"),\r\n    document.getElementById(\"recoveredChart\").getContext(\"2d\"),\r\n  ];\r\n\r\n  render(cases, deaths, recoveries) {\r\n    if (!cases || !deaths || !recoveries) return;\r\n    this._data[0] = cases;\r\n    this._data[1] = deaths;\r\n    this._data[2] = recoveries;\r\n    this._generateMarkup();\r\n    console.log(this._data);\r\n  }\r\n\r\n  _colorGen() {\r\n    Math.floor(Math.random() * 256);\r\n  }\r\n\r\n  _generateMarkup() {\r\n    for (let i = 0; i < this._data.length; i++) {\r\n      let myChart = new Chart(this._ctx[i], {\r\n        type: \"doughnut\",\r\n        data: {\r\n          labels: [\"2020\", \"2021\"],\r\n          datasets: [\r\n            {\r\n              label: \"Years\",\r\n              data: [this._data[i].twentytwenty, this._data[i].twentyone],\r\n              backgroundColor: [\r\n                \"rgba(255, 99, 132, 0.2)\",\r\n                \"rgba(54, 162, 235, 0.2)\",\r\n              ],\r\n              borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\"],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default new ChartView();\r\n","import * as model from \"./model.js\";\r\n\r\nimport GlobalDataView from \"./views/GlobalDataView.js\";\r\nimport KenyanDataView from \"./views/KenyanDataView.js\";\r\nimport SearchView from \"./views/SearchView.js\";\r\nimport SearchResultsView from \"./views/SearchResultsView.js\";\r\nimport ChartView from \"./views/ChartView.js\";\r\n\r\nconst controlGlobalCases = async function () {\r\n  try {\r\n    // 1. Render Spinner\r\n    GlobalDataView.renderSpinner();\r\n\r\n    // 2. Get COVID-19 global cases\r\n    await model.getGlobalCases();\r\n\r\n    // 2. Render cases\r\n    GlobalDataView.renderGlobalData(model.state.globalCases);\r\n  } catch (err) {\r\n    console.error(`${err}`);\r\n  }\r\n};\r\n\r\nconst controlKenyanCases = async function () {\r\n  // 1. Render Spinner\r\n  KenyanDataView.renderSpinner();\r\n\r\n  // 2. Get Kenyan COVID-19 data\r\n  await model.getKenyanCases();\r\n\r\n  // 3. Render Kenyan cases\r\n  KenyanDataView.render(model.state.kenyanCases);\r\n};\r\n\r\nconst controlSearches = async function () {\r\n  try {\r\n    // 1. Get the inputed query\r\n    const query = SearchView.getQuery();\r\n\r\n    if (query === \"\") {\r\n      alert(\"Input country\");\r\n      return;\r\n    }\r\n\r\n    // 2. Render the spinner\r\n    SearchResultsView.renderSpinner();\r\n\r\n    // 3. Run the search query\r\n    await model.searchCountryCase(query);\r\n\r\n    // 4. Render Results\r\n    SearchResultsView.render(model.state.search.result);\r\n  } catch (err) {\r\n    SearchResultsView.renderError();\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n\r\nconst controlCOVIDHistory = async function () {\r\n  try {\r\n    // 1. Get the data\r\n    const data = await model.getCOVIDHistory();\r\n    // console.log(data);\r\n\r\n    // 2. Calculate totals\r\n    const confirmedCases = calculateTotals(data.cases);\r\n    const confirmedDeaths = calculateTotals(data.deaths);\r\n    const confirmedRecoveries = calculateTotals(data.recovered);\r\n\r\n    // 3, Render the Chart\r\n    ChartView.render(confirmedCases, confirmedDeaths, confirmedRecoveries);\r\n  } catch (err) {\r\n    console.log(`${err}`);\r\n  }\r\n};\r\n\r\nconst calculateTotals = function (data) {\r\n  let secondYearTotals = 0;\r\n  let firstYearTotals = 0;\r\n  const chartData = {\r\n    twentytwenty: null,\r\n    twentyone: null,\r\n  };\r\n\r\n  for (const [key, value] of Object.entries(data)) {\r\n    if (key.endsWith(\"21\")) {\r\n      secondYearTotals += value;\r\n    }\r\n\r\n    if (key.endsWith(\"20\")) {\r\n      firstYearTotals += value;\r\n    }\r\n  }\r\n\r\n  chartData.twentytwenty = secondYearTotals;\r\n  chartData.twentyone = firstYearTotals;\r\n\r\n  // console.log(chartData);\r\n  return chartData;\r\n};\r\n\r\n// Starting point of the application\r\nconst init = function () {\r\n  controlGlobalCases();\r\n  controlKenyanCases();\r\n  SearchView.addHandlerSearch(controlSearches);\r\n  controlCOVIDHistory();\r\n};\r\n\r\ninit();\r\n\r\n//todo: Add Inheritance to views and add chart js with worldwide data also fix the search issue\r\n//todo: Find a better way to display chart and include death and revcovered\r\n"],"names":["$01eabf68314158b70a576e3c80305fc9$export$state","globalCases","kenyanCases","search","query","result","history","cases","deaths","recovered","_data","_parentElement","document","querySelector","renderGlobalData","data","this","markup","_generateMarkup","_clear","insertAdjacentHTML","renderSpinner","spinner","innerHTML","map","el","join","render","countryInfo","flag","_searchField","getQuery","value","addHandlerSearch","handler","addEventListener","e","preventDefault","renderError","error","country","_ctx","getElementById","getContext","recoveries","console","log","_colorGen","Math","floor","random","i","length","myChart","Chart","type","labels","datasets","label","twentytwenty","twentyone","backgroundColor","borderColor","borderWidth","$760c570c0e35e0b3e71397189b6dd75e$var$controlKenyanCases","async","res","fetch","json","ok","Error","status","push","err","$01eabf68314158b70a576e3c80305fc9$export$getKenyanCases","$760c570c0e35e0b3e71397189b6dd75e$var$controlSearches","alert","$01eabf68314158b70a576e3c80305fc9$export$searchCountryCase","$760c570c0e35e0b3e71397189b6dd75e$var$controlCOVIDHistory","$01eabf68314158b70a576e3c80305fc9$export$getCOVIDHistory","confirmedCases","$760c570c0e35e0b3e71397189b6dd75e$var$calculateTotals","confirmedDeaths","confirmedRecoveries","secondYearTotals","firstYearTotals","chartData","key","Object","entries","endsWith","$01eabf68314158b70a576e3c80305fc9$export$getGlobalCases","$760c570c0e35e0b3e71397189b6dd75e$var$controlGlobalCases"],"version":3,"file":"index.481f1f14.js.map"}